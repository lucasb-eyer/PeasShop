// Generated by CoffeeScript 1.6.1
var H, W, conn, connect, idify, item_template, mkitem;

conn = 0;

W = 600;

H = 400;

idify = function(s) {
  return s.replace(/[^a-zA-Z0-9]/g, function() {
    return '_';
  });
};

connect = function() {
  var addr, err, g;
  if (window["WebSocket"] == null) {
    err = "No WebSocket support. Get a better browser!";
    alert(err);
    throw new Error(err);
  }
  g = (window.location.pathname.match(/.*game\/([a-zA-Z0-9]+).*/))[1];
  addr = "ws://" + window.location.host + "/ws?g=" + g;
  conn = new WebSocket(addr);
  conn.onopen = function(evt) {
    return conn.send(g);
  };
  conn.onclose = function(evt) {
    console.log("Connection lost");
    return console.log(evt);
  };
  return conn.onmessage = function(evt) {
    var $arena, $i, i, item, msg, _fn, _i, _len, _ref;
    console.log("Message!");
    console.log(evt.data);
    msg = JSON.parse(evt.data);
    switch (msg.type) {
      case 'start':
        ($('#waiting')).hide();
        ($('#game')).show();
        $arena = $('#arena');
        _ref = msg.items;
        _fn = function(item, i) {
          var $i;
          $i = mkitem(item, i);
          $arena.append($i);
          return $i.click(function() {
            console.log(item);
            return conn.send(JSON.stringify({
              type: 'wanna',
              id: item.id
            }));
          });
        };
        for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {
          item = _ref[i];
          _fn(item, i);
        }
        break;
      case 'you_took':
        $i = $("#" + idify(msg.item));
        $i.stop();
        $i.appendTo($('#p2'));
        $i.css({
          'margin-left': 0,
          'margin-top': 0
        });
        $i.addClass('has');
        ($('#myscore')).text(msg.score.toFixed(2));
        ($('#mymoney')).text(msg.money);
        if (msg.color_bonus) {
          ($('#mybonus')).text(" + " + msg.color_bonus + " color bonus");
        } else {
          ($('#mybonus')).text("");
        }
        break;
      case 'other_took':
        $i = $("#" + idify(msg.item));
        $i.stop();
        $i.appendTo($('#p1'));
        $i.css({
          'margin-left': 0,
          'margin-top': 0
        });
        $i.addClass('has');
        ($('#otherscore')).text(msg.other_score.toFixed(2));
        ($('#othermoney')).text(msg.other_money);
        if (msg.other_color_bonus) {
          ($('#otherbonus')).text(" + " + msg.other_color_bonus + " color bonus");
        } else {
          ($('#otherbonus')).text("");
        }
    }
  };
};

mkitem = function(item, i) {
  var $i, t;
  $i = $(Mustache.render(item_template, item));
  $i.hide();
  t = (1.1 - +item.speed) * 10000;
  $i.attr({
    id: idify(item.id)
  });
  $i.css({
    'margin-left': 600,
    'margin-top': (i % 2) * 200
  });
  $i.delay(i * 2000).show().animate({
    'margin-left': -200
  }, t, 'linear');
  return $i;
};

item_template = "<div class=item>\n    <img src={{img_url}} />\n</div>";
